name: dbt CD (DuckDB)

on:
  push:
    branches: ["main"]

jobs:
  cd:
    runs-on: ubuntu-latest
    env:
      DBT_PROFILES_DIR: .

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dbt-duckdb
        run: pip install -r dbt-requirements.txt

      - name: Ensure warehouse dirs
        run: mkdir -p warehouse external

      - name: Download latest prod.duckdb (if any)
        shell: bash
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" \
              -o artifacts.json
          prod_id=$(jq -r '.artifacts[] | select(.name=="duckdb-prod-db") | .id' artifacts.json | head -n1)
          if [ -n "$prod_id" ] && [ "$prod_id" != "null" ]; then
            curl -sL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$prod_id/zip" \
                -o prod.zip
            unzip -q prod.zip -d warehouse || true
          fi
          python - << 'PY'
import duckdb, os
os.makedirs('warehouse', exist_ok=True)
duckdb.connect('warehouse/prod.duckdb').close()
PY

      - name: Download latest manifest (optional)
        shell: bash
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" \
              -o artifacts.json
          man_id=$(jq -r '.artifacts[] | select(.name=="dbt-manifest") | .id' artifacts.json | head -n1)
          if [ -n "$man_id" ] && [ "$man_id" != "null" ]; then
            curl -sL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$man_id/zip" \
                -o manifest.zip
            unzip -q manifest.zip -d state || true
            cp state/manifest.json ./manifest.json || true
          fi

      - name: Deploy to production (Slim deploy)
        run: |
          if [ -f "./manifest.json" ]; then
            dbt build -s 'state:modified+' --state ./ --target prod
          else
            dbt build --target prod
          fi

      - name: Upload new manifest
        uses: actions/upload-artifact@v4
        with:
          name: dbt-manifest
          path: ./target/manifest.json
          retention-days: 7

      - name: Upload prod.duckdb
        uses: actions/upload-artifact@v4
        with:
          name: duckdb-prod-db
          path: warehouse/prod.duckdb
          retention-days: 7
