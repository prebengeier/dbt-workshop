name: dbt CI Teardown (DuckDB)

on:
  pull_request:
    types: [closed]

jobs:
  teardown:
    runs-on: ubuntu-latest
    env:
      DBT_PROFILES_DIR: .
      PR_NUM: ${{ github.event.number }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (dbt + helpers)
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install -r dbt-requirements.txt
          sudo apt-get update -y
          sudo apt-get install -y jq unzip

      - name: Ensure prod.duckdb available
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p warehouse

          # Fetch artifact list
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?per_page=100" \
            -o artifacts.json

          # Pick newest artifact named duckdb-prod-db (robust jq)
          prod_id=$(jq -r '
            (.artifacts // [])
            | map(select(.name=="duckdb-prod-db" and (.expired|not)))
            | sort_by(.updated_at)
            | if length>0 then (.[-1].id|tostring) else "" end
          ' artifacts.json)

          if [[ -n "${prod_id:-}" ]]; then
            echo "Found artifact id=${prod_id}. Downloading..."
            curl -sL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${prod_id}/zip" \
              -o prod.zip
            unzip -q prod.zip -d warehouse || true

            # Move prod.duckdb to warehouse/ if nested
            found=$(find warehouse -type f -name "prod.duckdb" | head -n1 || true)
            if [[ -n "${found:-}" && "${found}" != "warehouse/prod.duckdb" ]]; then
              mv "$found" warehouse/prod.duckdb
            fi
          fi

          # If still missing, create an empty prod.duckdb without heredoc/Python
          if [[ ! -f warehouse/prod.duckdb ]]; then
            echo "No valid artifact found. Creating empty warehouse/prod.duckdb"
            : > warehouse/prod.duckdb
          fi

          ls -l warehouse || true
