name: dbt CI Teardown (DuckDB)

on:
  pull_request:
    types: [closed]

jobs:
  teardown:
    runs-on: ubuntu-latest
    env:
      DBT_PROFILES_DIR: .
      PR_NUM: ${{ github.event.number }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install system deps (jq, unzip)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq unzip

      - name: Install dbt + deps
        run: |
          python -m pip install --upgrade pip
          pip install -r dbt-requirements.txt

      - name: Ensure folders
        run: mkdir -p warehouse state

      - name: Download latest prod.duckdb artifact (if any)
        shell: bash
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -euo pipefail
          if [ -z "${GH_TOKEN}" ]; then
            echo "No token (act run?). Skipping prod.duckdb download."
          else
            curl -s -H "Authorization: Bearer ${GH_TOKEN}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?per_page=100" \
              -o artifacts.json
            prod_id=$(jq -r '.artifacts
              | map(select(.name=="duckdb-prod-db" and .expired==false))
              | sort_by(.created_at) | last | .id // empty' artifacts.json)
            if [[ -n "$prod_id" ]]; then
              curl -sL -H "Authorization: Bearer ${GH_TOKEN}" \
                "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$prod_id/zip" \
                -o prod.zip
              unzip -q prod.zip -d _prod || true
              f=$(ls -1 _prod/**.duckdb 2>/dev/null | head -n1 || true)
              if [[ -n "${f:-}" ]]; then
                mv "$f" warehouse/prod.duckdb
              fi
            else
              echo "No previous duckdb-prod-db artifact found."
            fi
          fi
          # Sørg for at filen finnes uansett
          python -c "import duckdb,os; os.makedirs('warehouse', exist_ok=True); duckdb.connect('warehouse/prod.duckdb').close()"

      # Kun hvis du har en makro 'drop_pr_schemas'
      - name: Drop PR schemas in prod.duckdb (optional)
        run: |
          dbt run-operation drop_pr_schemas \
            --target prod \
            --args '{"schema_prefix": "analytics__pr", "pr_number": "'"${PR_NUM}"'"}'

      - name: Delete PR DuckDB files
        run: |
          echo "Cleaning warehouse/pr_${{ env.PR_NUM }}__*.duckdb"
          rm -f warehouse/pr_${{ env.PR_NUM }}__*.duckdb || true

      - name: Log cleanup results
        run: echo "✅ Cleanup completed for PR #${{ env.PR_NUM }}"
