      - name: Ensure prod.duckdb available
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p warehouse

          # Hent artifact-listen
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts?per_page=100" \
            -o artifacts.json

          # Finn nyeste artifact med navn "duckdb-prod-db" (robust jq uten last?)
          prod_id=$(jq -r '
            (.artifacts // [])
            | map(select(.name=="duckdb-prod-db" and (.expired|not)))
            | sort_by(.updated_at)
            | if length>0 then (.[-1].id|tostring) else "" end
          ' artifacts.json)

          if [[ -n "${prod_id:-}" ]]; then
            echo "✔ Fant artifact id=${prod_id}. Laster ned…"
            curl -sL -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${prod_id}/zip" \
              -o prod.zip
            unzip -q prod.zip -d warehouse || true

            # Flytt prod.duckdb til warehouse/ om den ligger dypt
            found=$(find warehouse -type f -name "prod.duckdb" | head -n1 || true)
            if [[ -n "${found:-}" && "${found}" != "warehouse/prod.duckdb" ]]; then
              mv "$found" warehouse/prod.duckdb
            fi
          fi

          # Hvis vi fortsatt ikke har filen, opprett en tom
          if [[ ! -f warehouse/prod.duckdb ]]; then
            echo "Ingen gyldig artifact funnet. Oppretter tom warehouse/prod.duckdb"
            python - <<'PY'
import os
os.makedirs("warehouse", exist_ok=True)
try:
    import duckdb
    con = duckdb.connect("warehouse/prod.duckdb")
    con.close()
except Exception:
    # Fallback: lag tom fil hvis duckdb ikke er installert i dette miljøet
    open("warehouse/prod.duckdb", "ab").close()
print("Tom prod.duckdb opprettet")
PY
          fi

          ls -l warehouse || true
